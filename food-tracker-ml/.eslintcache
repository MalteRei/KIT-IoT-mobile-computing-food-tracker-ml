[{"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\index.tsx":"1","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\reportWebVitals.ts":"2","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\App.tsx":"3","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\camera-stream-component\\CameraStream.tsx":"4","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\camera-feed-component\\CameraFeed.tsx":"5","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\video-prediction-component\\VideoPrediction.tsx":"6","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\helpers\\ImageModel.ts":"7","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\food-tracker-container\\FoodTrackerContainer.tsx":"8","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\prompt-component\\Prompt.tsx":"9","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\food-prediction-result-component\\FoodPredictionResult.tsx":"10","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\image-model-container\\ImageModelContainer.tsx":"11","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\nutrition-panel-component\\NutritionPanel.tsx":"12","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\button-row-component\\ButtonRowComponent.tsx":"13","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\two-pane-prompt-component\\TwoPanePrompt.tsx":"14","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\models\\Icons.ts":"15","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\icon-button-component\\IconButton.tsx":"16","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\helpers\\IconFactory.tsx":"17","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\assets\\icons\\DismissIcon.tsx":"18","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\helpers\\NutritionService.ts":"19","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\label-value-component\\LabelValue.tsx":"20","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\add-food-diary-entry-component\\AddFoodDiaryEntry.tsx":"21","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\assets\\icons\\CheckmarkIcon.tsx":"22","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\assets\\icons\\AddIcon.tsx":"23","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\helpers\\FoodDiaryService.ts":"24","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\panel-component\\Panel.tsx":"25","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\round-icon-button-component\\RoundIconButton.tsx":"26","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\food-dairy-container-component\\FoodDiaryContainer.tsx":"27","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\panel-top-row-component\\PanelTopRow.tsx":"28","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\tab-item-component\\TabItem.tsx":"29","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\tabs-component\\Tabs.tsx":"30","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\tab-component\\Tab.tsx":"31","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\day-nutrition-statistic-component\\DayNutritionStatistic.tsx":"32","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\circular-pie-chart-component\\CircularPieChart.tsx":"33","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\circle-pie-piece-component\\CirclePiePiece.tsx":"34","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\food-nutrition-list-component\\FoodNutritionList.tsx":"35","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\food-nutrition-list-item-component\\FoodNutritionListItem.tsx":"36","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\date-switcher-component\\DateSwitcher.tsx":"37","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\assets\\icons\\ChevronLeftIcon.tsx":"38","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\assets\\icons\\ChevronRightIcon.tsx":"39","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\assets\\icons\\NotebookIcon.tsx":"40","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\endless-spinner-component\\EndlessSpinner.tsx":"41"},{"size":500,"mtime":499162500000,"results":"42","hashOfConfig":"43"},{"size":425,"mtime":499162500000,"results":"44","hashOfConfig":"43"},{"size":214,"mtime":1611943387371,"results":"45","hashOfConfig":"43"},{"size":2888,"mtime":1614540145096,"results":"46","hashOfConfig":"43"},{"size":1329,"mtime":1614542190928,"results":"47","hashOfConfig":"43"},{"size":1389,"mtime":1614543119733,"results":"48","hashOfConfig":"43"},{"size":5752,"mtime":1614543119733,"results":"49","hashOfConfig":"43"},{"size":1305,"mtime":1614541484700,"results":"50","hashOfConfig":"43"},{"size":1990,"mtime":1614538569561,"results":"51","hashOfConfig":"43"},{"size":1489,"mtime":1614535138385,"results":"52","hashOfConfig":"43"},{"size":1889,"mtime":1614543119733,"results":"53","hashOfConfig":"43"},{"size":3352,"mtime":1614543119733,"results":"54","hashOfConfig":"43"},{"size":521,"mtime":1614267842060,"results":"55","hashOfConfig":"43"},{"size":2124,"mtime":1614369522211,"results":"56","hashOfConfig":"43"},{"size":130,"mtime":1614535795954,"results":"57","hashOfConfig":"43"},{"size":728,"mtime":1614529683299,"results":"58","hashOfConfig":"43"},{"size":1080,"mtime":1614535824606,"results":"59","hashOfConfig":"43"},{"size":895,"mtime":1614361894847,"results":"60","hashOfConfig":"43"},{"size":899,"mtime":1614363611259,"results":"61","hashOfConfig":"43"},{"size":1066,"mtime":1614523045878,"results":"62","hashOfConfig":"43"},{"size":2185,"mtime":1614364303615,"results":"63","hashOfConfig":"43"},{"size":879,"mtime":1614363301282,"results":"64","hashOfConfig":"43"},{"size":771,"mtime":1614361894846,"results":"65","hashOfConfig":"43"},{"size":3511,"mtime":1614543617977,"results":"66","hashOfConfig":"43"},{"size":327,"mtime":1614366139257,"results":"67","hashOfConfig":"43"},{"size":740,"mtime":1614522749426,"results":"68","hashOfConfig":"43"},{"size":5291,"mtime":1614542588382,"results":"69","hashOfConfig":"43"},{"size":979,"mtime":1614528217700,"results":"70","hashOfConfig":"43"},{"size":255,"mtime":1614509636058,"results":"71","hashOfConfig":"43"},{"size":1330,"mtime":1614444841762,"results":"72","hashOfConfig":"43"},{"size":564,"mtime":1614522848025,"results":"73","hashOfConfig":"43"},{"size":4236,"mtime":1614543012835,"results":"74","hashOfConfig":"43"},{"size":1733,"mtime":1614500584838,"results":"75","hashOfConfig":"43"},{"size":3358,"mtime":1614498781709,"results":"76","hashOfConfig":"43"},{"size":846,"mtime":1614542923514,"results":"77","hashOfConfig":"43"},{"size":2141,"mtime":1614542912921,"results":"78","hashOfConfig":"43"},{"size":2756,"mtime":1614543119733,"results":"79","hashOfConfig":"43"},{"size":618,"mtime":1614535887137,"results":"80","hashOfConfig":"43"},{"size":620,"mtime":1614535887137,"results":"81","hashOfConfig":"43"},{"size":1365,"mtime":1614535795914,"results":"82","hashOfConfig":"43"},{"size":310,"mtime":1614537186875,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"6oxpyz",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\index.tsx",[],["174","175"],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\reportWebVitals.ts",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\App.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\camera-stream-component\\CameraStream.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\camera-feed-component\\CameraFeed.tsx",["176","177","178"],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\video-prediction-component\\VideoPrediction.tsx",["179"],"import React, { useEffect, useState } from 'react';\r\nimport FoodPredictionResult from '../food-prediction-result-component/FoodPredictionResult';\r\nimport ImageModel from '../helpers/ImageModel';\r\nimport IPrediction from '../models/IPrediction';\r\n\r\nexport interface IImageModelProps {\r\n    videoElementToPredict: HTMLVideoElement | undefined,\r\n    model: ImageModel\r\n}\r\nconst VideoPrediction: React.FunctionComponent<IImageModelProps> = (props) => {\r\n    const { videoElementToPredict, model } = props;\r\n    const [currentPrediction, setCurrentPrediction] = useState<IPrediction | undefined>(undefined);\r\n\r\n    if(!videoElementToPredict){\r\n        return null;\r\n    }\r\n    \r\n\r\n    const predictVideo = () => {\r\n       // console.log(\"predict video\");\r\n        if(videoElementToPredict) {\r\n        const prediction = model.predictWithHighestConfidence(videoElementToPredict);\r\n        if(prediction) {\r\n            setCurrentPrediction(prediction);\r\n        }\r\n        //model.predict(videoElementToPredict)\r\n         // Call this function again to keep predicting when the browser is ready.\r\n        }\r\n        window.requestAnimationFrame(predictVideo);\r\n    }\r\n    if(videoElementToPredict && !currentPrediction){\r\n        predictVideo();\r\n    }\r\n    \r\n    return (\r\n        <FoodPredictionResult currentPrediction={currentPrediction}/>\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default VideoPrediction;","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\helpers\\ImageModel.ts",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\food-tracker-container\\FoodTrackerContainer.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\prompt-component\\Prompt.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\food-prediction-result-component\\FoodPredictionResult.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\image-model-container\\ImageModelContainer.tsx",["180"],"import React, { useEffect, useState } from 'react';\r\nimport EndlessSpinner from '../endless-spinner-component/EndlessSpinner';\r\nimport ImageModel from '../helpers/ImageModel';\r\nimport Prompt from '../prompt-component/Prompt';\r\nimport VideoPrediction from '../video-prediction-component/VideoPrediction';\r\n\r\nexport interface IImageModelContainerProps {\r\n    videoElementToPredict: HTMLVideoElement | undefined,\r\n}\r\nconst ImageModelContainer: React.FunctionComponent<IImageModelContainerProps> = (props) => {\r\n    const {videoElementToPredict} = props;\r\n    const [model, setModel] = useState<ImageModel | undefined>(undefined);\r\n\r\n    const loadModel = () => {\r\n        if (!model) {\r\n            const newModel = new ImageModel(\"https://foodtrackerstorage.z1.web.core.windows.net/model\",\"signature.json\");\r\n            newModel.load()\r\n                .then(() => {\r\n                    setModel(newModel);\r\n                }).catch((err) => {\r\n                    //TODO handle error\r\n                    console.error(\"error loading model\");\r\n                    console.dir(err);\r\n                }\r\n                );\r\n        }\r\n    };\r\n\r\n    const cleanUpModel = () => {\r\n        if (model) {\r\n            model.dispose();\r\n            setModel(undefined);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        loadModel();\r\n        return cleanUpModel;\r\n    }, []);\r\n\r\n    if (!model || !model.isLoaded()) {\r\n        const descriptionElement = (\r\n            <p>We need to download a machine learning model that can find food.\r\n                <br></br>\r\n                <EndlessSpinner/>\r\n            </p>\r\n        );\r\n        return (\r\n            <Prompt title=\"Loading Model\" description={descriptionElement} />\r\n        );\r\n    }\r\n    return(\r\n        <VideoPrediction videoElementToPredict={videoElementToPredict} model={model}/>\r\n    );\r\n\r\n}\r\nexport default ImageModelContainer;","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\nutrition-panel-component\\NutritionPanel.tsx",["181","182","183","184"],"import React, { useState } from 'react';\r\nimport Prompt from '../prompt-component/Prompt';\r\nimport ButtonRowComponent from '../button-row-component/ButtonRowComponent';\r\nimport IconButton from '../icon-button-component/IconButton';\r\nimport Icons from '../models/Icons';\r\nimport './NutritionPanel.css';\r\nimport NutritionService from '../helpers/NutritionService';\r\nimport LabelValue from '../label-value-component/LabelValue';\r\nimport AddFoodDiaryEntry from '../add-food-diary-entry-component/AddFoodDiaryEntry';\r\nimport Panel from '../panel-component/Panel';\r\nimport PanelTopRow from '../panel-top-row-component/PanelTopRow';\r\n\r\nexport interface INutritionPanelProps {\r\n    foodToShowNutritionOf: string;\r\n    onDismissed: () => void\r\n}\r\n\r\nconst nutritionService = new NutritionService();\r\n\r\nconst NutritionPanel: React.FunctionComponent<INutritionPanelProps> = (props) => {\r\n    const { foodToShowNutritionOf, onDismissed } = props;\r\n    const [amountFactor, setAmountFactor] = useState<number>(1);\r\n\r\n    const nutritionalValues = nutritionService.getNutritionalValueOf(foodToShowNutritionOf);\r\n    if(!nutritionalValues) {\r\n        return (\r\n            <div>\r\n                <h1>Not found</h1>\r\n                <p>Sorry, we could not look up the nutritional value for {foodToShowNutritionOf}.</p>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n    const roundDecimalPlace = 100;\r\n   \r\n    const kiloCalories = Math.round(nutritionalValues.kiloCalories * amountFactor * roundDecimalPlace) / roundDecimalPlace;\r\n    const kiloJoule = Math.round(nutritionalValues.kiloJoule * amountFactor * roundDecimalPlace) / roundDecimalPlace;\r\n    const fat = Math.round(nutritionalValues.fat * amountFactor * roundDecimalPlace) / roundDecimalPlace;\r\n    const carbohydrates = Math.round(nutritionalValues.carbohydrates * amountFactor * roundDecimalPlace) / roundDecimalPlace;\r\n    const protein = Math.round(nutritionalValues.protein * amountFactor * roundDecimalPlace) / roundDecimalPlace;\r\n    const handleAmountChange = (gramm: number) => {\r\n        console.dir(gramm);\r\n        const newFactor = gramm/100;\r\n        setAmountFactor(newFactor);\r\n    }\r\n    return (\r\n        <section className=\"nutrition-container\">\r\n            <Panel>\r\n                <PanelTopRow onClosePanel={onDismissed} title={foodToShowNutritionOf}></PanelTopRow>\r\n                \r\n              \r\n                <h4>Calories</h4>\r\n                <div className=\"flex-row\">\r\n                    <LabelValue label='kcal' value={kiloCalories.toString()}/>\r\n                    <LabelValue label='kJ' value={kiloJoule.toString()}/>\r\n\r\n                </div>\r\n                    <LabelValue label='Fat' value={fat.toString()+ ' g'}/>\r\n                    <LabelValue label='Carbohydrate' value={carbohydrates.toString()+ ' g'}/>\r\n                    <LabelValue label='Protein' value={protein.toString() + ' g'}/>\r\n                <AddFoodDiaryEntry onFoodAmountChanged={handleAmountChange} foodName={foodToShowNutritionOf}/>\r\n                \r\n            </Panel>\r\n\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default NutritionPanel;","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\button-row-component\\ButtonRowComponent.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\two-pane-prompt-component\\TwoPanePrompt.tsx",["185"],"import React from 'react';\r\nimport ButtonRowComponent from '../button-row-component/ButtonRowComponent';\r\nimport './TwoPanePrompt.css';\r\n\r\nexport interface ITwoPanePrompt{\r\n    /* Overwrite which child of this component should be the left pane*/\r\n    leftPaneChildrenIndex?: number,\r\n    /* Overwrite which child of this component should be the right pane*/\r\n    rightPaneChildrenIndex?: number,\r\n}\r\nconst TwoPanePrompt: React.FunctionComponent<ITwoPanePrompt> = (props) => {\r\n    const { leftPaneChildrenIndex, rightPaneChildrenIndex,children} = props;\r\n    if(!children) {\r\n        return null;\r\n    }\r\n\r\n    const childrenArray = React.Children.toArray(children);\r\n    let leftPaneContent = null;\r\n    let rightPaneContent = null;\r\n\r\n    \r\n    if(leftPaneChildrenIndex !== undefined && leftPaneChildrenIndex < childrenArray.length) {\r\n            leftPaneContent = childrenArray[leftPaneChildrenIndex];\r\n    } else {\r\n        if(childrenArray.length >= 2) {\r\n            if(rightPaneChildrenIndex !== 0) {\r\n                leftPaneContent = childrenArray[0];\r\n            } else {\r\n                leftPaneContent = childrenArray[1];\r\n            }\r\n        }\r\n    }\r\n    if(rightPaneChildrenIndex !== undefined && rightPaneChildrenIndex < childrenArray.length) {\r\n            rightPaneContent = childrenArray[rightPaneChildrenIndex];\r\n    } else {\r\n        if(childrenArray.length >= 2) {\r\n            if(leftPaneChildrenIndex !== 1) {\r\n                rightPaneContent = childrenArray[1];\r\n            }\r\n        } else if(childrenArray.length === 1) {\r\n            if(leftPaneChildrenIndex !== 0) {\r\n                rightPaneContent = childrenArray[0];\r\n            }\r\n        } \r\n    }\r\n    \r\n    const leftElement = (leftPaneContent !== null) ? <div className=\"left-pane-content pane-content\">{leftPaneContent}</div> : null;\r\n    const rightElement = (rightPaneContent !== null) ? <div className=\"right-pane-content pane-content\">{rightPaneContent}</div> : null;\r\n\r\n    return(\r\n        <section>\r\n            {leftElement}\r\n            {rightElement}\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\nexport default TwoPanePrompt;","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\models\\Icons.ts",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\icon-button-component\\IconButton.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\helpers\\IconFactory.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\assets\\icons\\DismissIcon.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\helpers\\NutritionService.ts",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\label-value-component\\LabelValue.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\add-food-diary-entry-component\\AddFoodDiaryEntry.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\assets\\icons\\CheckmarkIcon.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\assets\\icons\\AddIcon.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\helpers\\FoodDiaryService.ts",["186"],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\panel-component\\Panel.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\round-icon-button-component\\RoundIconButton.tsx",["187"],"import React from 'react';\r\nimport IconFactory from '../helpers/IconFactory';\r\nimport { IIconButtonProps } from '../icon-button-component/IconButton';\r\nimport Icons from '../models/Icons';\r\n\r\nconst iconFactory = new IconFactory();\r\nconst RoundIconButton: React.FunctionComponent<IIconButtonProps> = (props) => {\r\n    const {onClick, icon, type} = props;\r\n    return(\r\n        <button type={type} onClick={onClick} style={{border: 'none', backgroundColor: 'var(--color-background)', width: '64px', height: '64px', borderRadius: '50%', padding: '4px', display: 'flex', justifyContent: 'center', alignItems: 'center', minWidth: '64px'}}>\r\n            {iconFactory.getIcon(icon)}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default RoundIconButton;","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\food-dairy-container-component\\FoodDiaryContainer.tsx",["188"],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\panel-top-row-component\\PanelTopRow.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\tab-item-component\\TabItem.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\tabs-component\\Tabs.tsx",["189","190"],"import React, { useState, ReactElement, ReactNode, ReactChild } from 'react';\r\nimport Tab from '../tab-component/Tab';\r\nimport './Tabs.css';\r\n\r\nexport interface ITabsProps {\r\n    children: ReactElement<ITabsChildProps>[]\r\n}\r\nexport interface ITabsChildProps {\r\n    label: string\r\n}\r\nconst Tabs: React.FunctionComponent<ITabsProps> = (props) => {\r\n    const {children} = props;\r\n    const [activeTabIndex, setActiveTabIndex] = useState(0);\r\n    const tabsChildren = React.Children.toArray(children);\r\n    if(!children || !tabsChildren || tabsChildren.length === 0 || activeTabIndex >= tabsChildren.length) {\r\n        return null;\r\n    }\r\n    const tabs = React.Children.map(children, (child: ReactElement<ITabsChildProps>, index) => {\r\n        let label = `Tab ${index}`;\r\n        if(child.props.label){\r\n           label = child.props.label;\r\n        }\r\n        return (\r\n            <Tab key={`${label}-${index}`} label={label} onClick={() => setActiveTabIndex(index)} isActive={index === activeTabIndex}/>\r\n        );\r\n    });\r\n\r\n    return(\r\n        <section className=\"tabs\">\r\n            <ol className=\"tabs-header\">\r\n                {tabs}\r\n            </ol>\r\n            <div className=\"tab-content\">\r\n                {tabsChildren[activeTabIndex]}\r\n            </div>\r\n        </section>\r\n    );\r\n\r\n}\r\nexport default Tabs;","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\tab-component\\Tab.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\day-nutrition-statistic-component\\DayNutritionStatistic.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\circular-pie-chart-component\\CircularPieChart.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\circle-pie-piece-component\\CirclePiePiece.tsx",["191"],"import React, { useRef } from 'react';\r\nimport './CirclePiePiece.css';\r\n\r\nexport interface ICirclePiePieceProps {\r\n    lengthInDegree: number,\r\n    piePieceIndex: number,\r\n    color:string\r\n}\r\nconst CirclePiePiece: React.FunctionComponent<ICirclePiePieceProps> = (props) => {\r\n    const {lengthInDegree, piePieceIndex, color} = props;\r\n    const endMarkerRef = useRef<HTMLDivElement>(null);\r\n    const firstWedgeRef = useRef<HTMLDivElement>(null);\r\n    const secondWedgeRef = useRef<HTMLDivElement>(null);\r\n\r\n    if(lengthInDegree < 0 || lengthInDegree > 360 || piePieceIndex < 0) {\r\n        return null;\r\n    }\r\n    \r\n    const degreeRotationFirstContainer = (lengthInDegree > 180)? 180 : lengthInDegree;\r\n    const degreeRotationSecondContainer = lengthInDegree - degreeRotationFirstContainer;\r\n    if(endMarkerRef.current && firstWedgeRef.current && secondWedgeRef.current && 'animate' in endMarkerRef.current) {\r\n        const animationOptions: KeyframeAnimationOptions = {\r\n            duration: 5000 + (1500*piePieceIndex),\r\n            delay: 200,\r\n            easing: 'linear'\r\n        };\r\n        const keyframesEndMarker: Keyframe[] = [\r\n            {transform: 'rotateZ(0deg)'},\r\n            {transform: 'rotateZ(0deg)', offset: 0.06},\r\n            {transform: `rotateZ(${degreeRotationFirstContainer}deg)`, offset: 0.24},\r\n            {transform: `rotateZ(${lengthInDegree}deg)`, offset: 0.28},\r\n            {transform: `rotateZ(${lengthInDegree}deg)`, offset: 1}\r\n    \r\n        ];\r\n    \r\n        const waitingForPreviousPiePiece = (piePieceIndex === 0)? 0:  1 / (piePieceIndex + 1);\r\n        const keyframesFirstWedge: Keyframe[] = [\r\n            {transform: 'rotateZ(0deg)', offset: 0},\r\n            {transform: 'rotateZ(0deg)', offset: 0.06},\r\n            {transform: `rotateZ(${degreeRotationFirstContainer}deg)`, offset:  0.24},\r\n            {transform: `rotateZ(${degreeRotationFirstContainer}deg)`, offset: 1}\r\n        ];\r\n    \r\n        const keyframesSecondWedge: Keyframe[] = [\r\n            {transform: 'rotateZ(0deg)', offset: 0},\r\n            {transform: 'rotateZ(0deg)', offset: 0.24},\r\n            {transform: `rotateZ(${degreeRotationSecondContainer}deg)`, offset: 0.28},\r\n            {transform: `rotateZ(${degreeRotationSecondContainer}deg)`, offset: 1}\r\n    \r\n        ];\r\n      \r\n            endMarkerRef.current.animate(keyframesEndMarker, animationOptions);\r\n            firstWedgeRef.current.animate(keyframesFirstWedge, animationOptions);\r\n            secondWedgeRef.current.animate(keyframesSecondWedge, animationOptions);\r\n    }\r\n   \r\n   \r\n    return(\r\n        <div className=\"dial\">\r\n            <div className=\"dial-container container1\">\r\n              <div style={{ transform: `rotateZ(${degreeRotationFirstContainer}deg)`, background: color}} ref={firstWedgeRef} className=\"wedge\"></div>\r\n            </div>\r\n            <div className=\"dial-container container2\">\r\n              <div style={{ transform: `rotateZ(${degreeRotationSecondContainer}deg)`, background: color}} ref={secondWedgeRef} className=\"wedge\"></div>\r\n            </div>\r\n            <div style={{background: color}} className=\"marker start\"></div>\r\n            <div style={{transform: `rotateZ(${lengthInDegree}deg)`, background: color}} ref={endMarkerRef} className=\"marker end\"></div>\r\n          </div>\r\n    );\r\n}\r\n\r\nexport default CirclePiePiece;","C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\food-nutrition-list-component\\FoodNutritionList.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\food-nutrition-list-item-component\\FoodNutritionListItem.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\date-switcher-component\\DateSwitcher.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\assets\\icons\\ChevronLeftIcon.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\assets\\icons\\ChevronRightIcon.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\assets\\icons\\NotebookIcon.tsx",[],"C:\\Users\\Malte\\Documents\\GitHub\\KIT-IoT-mobile-computing-food-tracker-ml\\food-tracker-ml\\src\\endless-spinner-component\\EndlessSpinner.tsx",[],{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":24,"column":19,"nodeType":"198","messageId":"199","endLine":24,"endColumn":27},{"ruleId":"200","severity":1,"message":"201","line":30,"column":31,"nodeType":"198","endLine":30,"endColumn":38},{"ruleId":"200","severity":1,"message":"202","line":32,"column":10,"nodeType":"203","endLine":32,"endColumn":24,"suggestions":"204"},{"ruleId":"196","severity":1,"message":"205","line":1,"column":17,"nodeType":"198","messageId":"199","endLine":1,"endColumn":26},{"ruleId":"200","severity":1,"message":"206","line":38,"column":8,"nodeType":"203","endLine":38,"endColumn":10,"suggestions":"207"},{"ruleId":"196","severity":1,"message":"208","line":2,"column":8,"nodeType":"198","messageId":"199","endLine":2,"endColumn":14},{"ruleId":"196","severity":1,"message":"209","line":3,"column":8,"nodeType":"198","messageId":"199","endLine":3,"endColumn":26},{"ruleId":"196","severity":1,"message":"210","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":18},{"ruleId":"196","severity":1,"message":"211","line":5,"column":8,"nodeType":"198","messageId":"199","endLine":5,"endColumn":13},{"ruleId":"196","severity":1,"message":"209","line":2,"column":8,"nodeType":"198","messageId":"199","endLine":2,"endColumn":26},{"ruleId":"196","severity":1,"message":"212","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":27},{"ruleId":"196","severity":1,"message":"211","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":13},{"ruleId":"200","severity":1,"message":"213","line":28,"column":46,"nodeType":"203","endLine":28,"endColumn":70,"suggestions":"214"},{"ruleId":"196","severity":1,"message":"215","line":1,"column":41,"nodeType":"198","messageId":"199","endLine":1,"endColumn":50},{"ruleId":"196","severity":1,"message":"216","line":1,"column":52,"nodeType":"198","messageId":"199","endLine":1,"endColumn":62},{"ruleId":"196","severity":1,"message":"217","line":36,"column":15,"nodeType":"198","messageId":"199","endLine":36,"endColumn":41},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"@typescript-eslint/no-unused-vars","'listener' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","The ref value 'videoRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'videoRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'onVideoStreamAvailable'. Either include it or remove the dependency array.","ArrayExpression",["220"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'cleanUpModel' and 'loadModel'. Either include them or remove the dependency array.",["221"],"'Prompt' is defined but never used.","'ButtonRowComponent' is defined but never used.","'IconButton' is defined but never used.","'Icons' is defined but never used.","'INutritionalValue' is defined but never used.","React Hook useEffect has a missing dependency: 'setFoodForCurrentDate'. Either include it or remove the dependency array.",["222"],"'ReactNode' is defined but never used.","'ReactChild' is defined but never used.","'waitingForPreviousPiePiece' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [cameraStream, onVideoStreamAvailable]",{"range":"229","text":"230"},"Update the dependencies array to be: [cleanUpModel, loadModel]",{"range":"231","text":"232"},"Update the dependencies array to be: [currentDate, setFoodForCurrentDate, showDiary]",{"range":"233","text":"234"},[1056,1070],"[cameraStream, onVideoStreamAvailable]",[1365,1367],"[cleanUpModel, loadModel]",[1650,1674],"[currentDate, setFoodForCurrentDate, showDiary]"]